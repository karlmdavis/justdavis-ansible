---
# Specifies the entries that should be stored in the OpenLDAP directory.
#
# Yes, it seems a bit silly to duplicate all of the data in the directory here
# in YAML. But at our small scale, this actually makes things quite a bit
# easier to manage.
#
# Note: These entries are primarily additive. Any modifications will likely
# require additional tasks below to update/delete the existing data.

- name: Create LDAP OUs
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: "{{ item }}"
    objectClass: ['organizationalUnit']
  with_items:
    - 'ou=people,dc=justdavis,dc=com'
    - 'ou=groups,dc=justdavis,dc=com'
    - 'ou=services,dc=justdavis,dc=com'

# Create `ou=people` entries for each `people` entry (in `../vars/main.yml`).
# Note that the `ldap_entry` module being used here does not handles updates,
# only inserts.
- name: Create LDAP User Accounts
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: "uid={{ item.key }},ou=people,dc=justdavis,dc=com"
    objectClass: ['inetOrgPerson', 'posixAccount']
    attributes:
      uid: "{{ item.key }}"
      cn: "{{ item.value.givenName }} {{ item.value.sn }}"
      displayName: "{{ item.value.givenName }} {{ item.value.sn }}"
      givenName: "{{ item.value.givenName }}"
      sn: "{{ item.value.sn }}"
      uidNumber: "{{ item.value.uidAndGidNumber }}"
      gidNumber: "{{ item.value.uidAndGidNumber }}"
      userPassword: "{SASL}{{ item.key }}@{{ domain | upper }}"
      loginShell: '/bin/bash'
      homeDirectory: "/home/{{ item.key }}"
      mail: "{{ item.value.mail }}"
  with_dict: "{{ people }}"
  no_log: true

# Create `ou=groups` entries for each `people` entry (in `../vars/main.yml`).
- name: Create LDAP User Groups
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: "cn={{ item.key }},ou=groups,dc=justdavis,dc=com"
    objectClass: 'posixGroup'
    attributes:
      cn: "{{ item.key }}"
      gidNumber: "{{ item.value.uidAndGidNumber }}"
  with_dict: "{{ people }}"
  no_log: true

# Update email addresses, as needed.
- name: Update LDAP Email Addresses
  community.general.ldap_attrs:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: "uid={{ item.key }},ou=people,dc=justdavis,dc=com"
    state: exact
    attributes:
      mail: "{{ item.value.mail }}"
  with_dict: "{{ people }}"
  no_log: true

- name: Create 'karlanderica' Group in LDAP
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: 'cn=karlanderica,ou=groups,dc=justdavis,dc=com'
    objectClass: 'posixGroup'
    attributes:
      cn: 'karlanderica'
      gidNumber: '11000'
      memberUid:
        - karl
        - erica

- name: Create 'media_managers' Group in LDAP
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: 'cn=media_managers,ou=groups,dc=justdavis,dc=com'
    objectClass: 'posixGroup'
    attributes:
      cn: 'media_managers'
      gidNumber: '11001'
      memberUid:
        - karl
        - erica

- name: Create LDAP Service Accounts
  community.general.ldap_entry:
    bind_dn: 'cn=admin,dc=justdavis,dc=com'
    bind_pw: "{{ vault_ldap_root_password }}"
    dn: "uid={{ item }},ou=services,dc=justdavis,dc=com"
    # We have to include `inetOrgPerson` here as some services we integrate
    # with (e.g. Sonatype Nexus) require all users accounts to share a common
    # `objectClass`. Would also like to include `organizationalRole`, but it
    # conflicts with `inetOrgPerson`.
    objectClass: ['simpleSecurityObject', 'inetOrgPerson']
    attributes:
      uid: "{{ item }}"
      cn: "{{ item }} Service"
      sn: "Service: {{ item }}"
      userPassword: "{SASL}{{ item }}@{{ domain | upper }}"
  with_items: "{{ service_accounts }}"

# - name: Create 'nexus_devs' Group in LDAP
#   ldap_entry:
#     bind_dn: 'cn=admin,dc=justdavis,dc=com'
#     bind_pw: "{{ vault_ldap_root_password }}"
#     dn: 'cn=nexus_devs,ou=groups,dc=justdavis,dc=com'
#     objectClass: 'groupOfNames'
#     attributes:
#       cn: 'nexus_devs'
#       member:
#         - 'uid=jenkins,ou=services,dc=justdavis,dc=com'
#         - 'uid=karl,ou=people,dc=justdavis,dc=com'
