//
// Configure Plugin - SonarQube
//
// Configures the SonarQube plugin.
//
// References:
// * https://github.com/SonarSource/sonar-scanner-jenkins/blob/master/src/main/java/hudson/plugins/sonar/SonarGlobalConfiguration.java
// * https://github.com/SonarSource/sonar-scanner-jenkins/blob/master/src/main/java/hudson/plugins/sonar/SonarInstallation.java


// These are the basic imports that Jenkin's interactive script console 
// automatically includes.
import jenkins.*;
import jenkins.model.*;
import hudson.*;
import hudson.model.*;

println("Configuring SonarQube Plugin...")

// Create the desired SonarInstallation model (which we may or may not need).
name = "justdavis-sonarqube"
serverUrl = "http://localhost:{{ sonar_port }}{{ sonar_context_path }}"
serverVersion = hudson.plugins.sonar.utils.SQServerVersions.SQ_5_3_OR_HIGHER
serverAuthenticationToken = "{{ vault_sonar_builds_auth_token }}"
databaseUrl = null
databaseLogin = null
databasePassword = null
mojoVersion = null
additionalProperties = null
triggers = new hudson.plugins.sonar.model.TriggersConfig()
sonarLogin = null
sonarPassword = null
additionalAnalysisProperties = null
sonarInstallationDesired = new hudson.plugins.sonar.SonarInstallation(
  name, serverUrl, serverVersion, serverAuthenticationToken,
  databaseUrl, databaseLogin, databasePassword,
  mojoVersion, additionalProperties, triggers,
  sonarLogin, sonarPassword, additionalAnalysisProperties)

sonarInstallationExisting = hudson.plugins.sonar.SonarInstallation.get(name)
if (sonarInstallationExisting == null
    || serverUrl != sonarInstallationExisting.serverUrl
    || serverVersion != sonarInstallationExisting.serverVersion
    || serverAuthenticationToken != sonarInstallationExisting.serverAuthenticationToken) {
  sonarGlobalConfig = Jenkins.instance.getDescriptorByType(hudson.plugins.sonar.SonarGlobalConfiguration.class)
  sonarGlobalConfig.installations = [sonarInstallationDesired]
  println("Changed SonarQube installations.")
}
