---

# The Certbot installation will automatically add a cron job to renew certificates. Before that will work,
# though, we need to manually request the initial certificate -- as we do below.
- name: Install Certbot
  community.general.snap:
    name: certbot
    classic: true
  become: true

- name: Create Certbot Hook Scripts
  ansible.builtin.template:
    src: "certbot-hook-{{ item }}.sh"
    dest: "/usr/local/bin/certbot-hook-{{ item }}.sh"
    mode: 'u=rwx,g=rx,o=rx'
  become: true
  loop:
    - 'deploy'
    - 'dns-auth'
    - 'dns-cleanup'

- name: Request wildcard certificate with manual DNS
  ansible.builtin.command:
    cmd: >
      certbot certonly --manual
      --preferred-challenges=dns
      --email {{ domain_webmaster }}
      --agree-tos
      --no-eff-email
      --manual-auth-hook /usr/local/bin/certbot-hook-dns-auth.sh
      --manual-cleanup-hook /usr/local/bin/certbot-hook-dns-cleanup.sh
      --deploy-hook /usr/local/bin/certbot-hook-deploy.sh
      --non-interactive
      {{ domains | map('regex_replace', '^(.*)$', '-d "\1"') | join(' ') }}
      {{ domains | map('regex_replace', '^(.*)$', '-d "*.\1"') | join(' ') }}
      {{ domain_extra_sans | map('regex_replace', '^(.*)$', '-d "*.\1"') | join(' ') }}
    creates: "/etc/letsencrypt/live/{{ domains[0] }}/fullchain.pem"
  become: true
  register: certbot_cmd

- name: Show Certbot Output
  ansible.builtin.debug:
    var: certbot_cmd.stdout

- name: Firewall - Allow Apache HTTPS
  community.general.ufw:
    rule: allow
    name: Apache Secure
  become: true

- name: Create Apache SSL Configuration
  ansible.builtin.template:
    src: shared-ssl.conf
    dest: "/etc/apache2/conf-available/ssl.conf"
    mode: u=rw,g=rw,o=r
  become: true
  notify:
    - apache-reload

- name: Enable Apache SSL Configuration
  ansible.builtin.command: "/usr/sbin/a2enconf ssl.conf"
  args:
    creates: "/etc/apache2/conf-enabled/ssl.conf"
  become: true
  notify:
    - apache-reload

- name: Create Apache HTTPS Virtual Host Configuration
  ansible.builtin.template:
    src: domain-https.conf
    dest: "/etc/apache2/sites-available/{{ domain }}-https.conf"
    mode: u=rw,g=rw,o=r
  become: true
  notify:
    - apache-reload

- name: Enable Apache HTTPS Virtual Host Configuration
  ansible.builtin.command: "/usr/sbin/a2ensite {{ domain }}-https.conf"
  args:
    creates: "/etc/apache2/sites-enabled/{{ domain }}-https.conf"
  become: true
  notify:
    - apache-reload
