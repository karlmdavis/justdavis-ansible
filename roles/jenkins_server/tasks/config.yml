---

- name: Configure Jenkins Security
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('template', 'templates/configureSecurity.groovy.j2') }}"
  register: jenkins_script_security
  changed_when: "(jenkins_script_security | success) and 'Changed' in jenkins_script_security.output"

- name: Configure Java JDKs as Tools
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('file', 'files/configureJavaJdks.groovy') }}"
  register: jenkins_script_jdks_tool
  changed_when: "(jenkins_script_jdks_tool | success) and 'Changed' in jenkins_script_jdks_tool.output"

- name: Configure Maven as Tool
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('file', 'files/configureMaven.groovy') }}"
  register: jenkins_script_maven_tool
  changed_when: "(jenkins_script_maven_tool | success) and 'Changed' in jenkins_script_maven_tool.output"

- name: Configure File Provider Plugin
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('template', 'templates/configureFileProvider.groovy.j2') }}"
  register: jenkins_script_file_provider
  changed_when: "(jenkins_script_file_provider | success) and 'Changed' in jenkins_script_file_provider.output"

- name: Maven - .m2
  file:
    path: /var/lib/jenkins/.m2
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Maven - Toolchains
  copy:
    src: maven_toolchains.xml
    dest: /var/lib/jenkins/.m2/toolchains.xml
    owner: jenkins
    group: jenkins
    mode: 0644
  become: true

- name: Configure GitHub Plugin
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('template', 'templates/configureGitHub.groovy.j2') }}"
  register: jenkins_script_github
  changed_when: "(jenkins_script_github | success) and 'Changed' in jenkins_script_github.output"

- name: Configure SonarQube Plugin
  jenkins_script:
    url: "{{ jenkins_url_local }}"
    user: "{{ jenkins_dynamic_admin_username | default(omit) }}"
    password: "{{ jenkins_dynamic_admin_password | default(omit) }}"
    script: "{{ lookup('template', 'templates/configureSonarQube.groovy.j2') }}"
  register: jenkins_script_sonar
  changed_when: "(jenkins_script_sonar | success) and 'Changed' in jenkins_script_sonar.output"

- name: Jenkins GPG Key - Copy
  copy:
    dest: "/var/lib/jenkins/{{ item.dest_name }}"
    content: "{{ item.content }}"
    owner: jenkins
    group: jenkins
    mode: u=r,g=,o=
  register: copy_gpg_build_key
  become: true
  no_log: true
  with_items:
    - dest_name: gpg-justdavis-build-key-public.asc
      content: "{{ lookup('file', 'files/gpg-justdavis-build-key-public.asc') }}"
    - dest_name: gpg-justdavis-build-key-private.asc
      content: "{{ vault_gpg_justdavis_build_key_private }}"

- name: Jenkins GPG Key - Import
  command: gpg --import "/var/lib/jenkins/{{ item }}"
  when: copy_gpg_build_key.changed
  become: true
  become_user: jenkins
  with_items:
    - gpg-justdavis-build-key-public.asc
    - gpg-justdavis-build-key-private.asc
